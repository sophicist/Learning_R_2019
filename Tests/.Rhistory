# plot the  grid
ggplot(sepal.grid, aes(Sepal.Length, Sepal.Width, fill = Species)) +
geom_tile(alpha = 0.2) +
geom_point(data = iris, aes(col = Species, fill = NA))
knitr::opts_chunk$set(echo = TRUE)
#load the necessary library for data wrangling
pacman::p_load(readr,tidyverse,data.table,zoo,imputeTS,Boruta)
install.packages("pacman")
#load the necessary library for data wrangling
pacman::p_load(readr,tidyverse,data.table,zoo,imputeTS,Boruta)
train <- read_csv("Train.csv") %>% setDT()
colSums(is.na(train)) %>% knitr::kable()
#we drop precipitation columns it has almost NA's
train$`Precipitation in millimeters`=NULL
#replacing the missing values in temperature columns with the previous values
train$Temperature=na.locf(train$Temperature)
traind=copy(train)
#assign categorical variables as factors
traind$`Personal or Business`=as.factor(traind$`Personal or Business`)
traind %>% glimpse()
#load the necessary library for data wrangling
pacman::p_load(readr,tidyverse,data.table,zoo,imputeTS,Boruta)
train <- read_csv("Train.csv") %>% setDT()
colSums(is.na(train)) %>% knitr::kable()
#we drop precipitation columns it has almost NA's
train$`Precipitation in millimeters`=NULL
#replacing the missing values in temperature columns with the previous values
train$Temperature=na.locf(train$Temperature)
traind=copy(train)
#assign categorical variables as factors
traind$`Personal or Business`=as.factor(traind$`Personal or Business`)
traind %>% glimpse()
#feature selction using |Boruta package
prd=Boruta(`Time from Pickup to Arrival`~.,data = traind)
plot(prd)
getSelectedAttributes(prd, withTentative = F)
#we drop order columns that are not important
traind$`Order No`=NULL
traind$`Vehicle Type`=NULL
head(traind)
names(traind)
model <-lm('Time from Pickup to Arrival'~"Distance (KM)",data =df)
df <- traind[,c("Distance (KM)","Time from Pickup to Arrival")]
names(df)
model <-lm(Time~Dist,data =df)
names(df)<-c('Dist','Time')
rmse(model,data)
library(modelr)
head(traind)
df <- traind[,c("Distance (KM)","Time from Pickup to Arrival")]
names(df)
names(df)<-c('Dist','Time')
model <-lm(Time~Dist,data =df)
rmse(model,data)
#rmse(model,data)
model
rmse(model,df)
head(traind)
library(modelr)
head(traind)
df <- traind[,c("Distance (KM)","Time from Pickup to Arrival","Placement - Day of Month")]
names(df)
names(df)<-c('Dist','Time',"Day")
model <-lm(Time~Dist+Day,data =df)
rmse(model,df)
model
mtcars.lm <- lm(mpg ~ disp, data=mtcars)
summary(mtcars.lm)
mtcars.lm <- lm(mpg ~ disp, data=mtcars)
summary(mtcars.lm)
broom::glance(mtcars.lm)
# Add more values and test the AIC
mtcars.lm <- lm(mpg ~ disp + wt, data=mtcars)
broom::glance(mtcars.lm)
broom::glance(mtcars.lm) # AIC is 170
# Add more values and test the AIC
mtcars.lm <- lm(mpg ~ disp + wt, data=mtcars)
broom::glance(mtcars.lm)
# The AIC
mtcars.lm <- lm(mpg ~ disp + wt + hp, data=mtcars)
broom::glance(mtcars.lm)
mtcars.lm <- lm(mpg ~ disp, data=mtcars)
summary(mtcars.lm)
broom::glance(mtcars.lm) # AIC is 170
# Add more values and test the AIC
mtcars.lm <- lm(mpg ~ disp + wt, data=mtcars)
broom::glance(mtcars.lm)
# The AIC
mtcars.lm <- lm(mpg ~ disp + wt + hp, data=mtcars)
broom::glance(mtcars.lm)
# Even more
mtcars.lm <- lm(mpg ~ disp + wt + hp + cyl, data=mtcars)
broom::glance(mtcars.lm)
# Too many
mtcars.lm <- lm(mpg ~ disp + wt + hp + cyl + gear, data=mtcars)
broom::glance(mtcars.lm)
# start with the null regression (just the intercept term)
lm.null <- lm(mpg ~ 1, data=mtcars)
summary(lm.null)
AIC(lm.null)# the AIC for this model
BIC(lm.null)# Bic for the model
# start with the null regression (just the intercept term)
lm.null <- lm(mpg ~ 1, data=mtcars)
summary(lm.null)
AIC(lm.null)# the AIC for this model
BIC(lm.null)# Bic for the model
step(lm.null, scope=list(upper=lm(mpg ~ ., data=mtcars)), direction="forward")# use the step regression to automate the process
#k =log(n) to specify use of BIC
# Propagate backwards
step(lm.full, scope=list(lower=lm.null), direction="backward")
# start with the null regression (just the intercept term)
lm.null <- lm(mpg ~ 1, data=mtcars)
summary(lm.null)
AIC(lm.null)# the AIC for this model
BIC(lm.null)# Bic for the model
step(lm.null, scope=list(upper=lm(mpg ~ ., data=mtcars)), direction="forward")# use the step regression to automate the process
#k =log(n) to specify use of BIC
# Propagate backwards
lm.full <- lm(mpg ~ ., data=mtcars)
step(lm.full, scope=list(lower=lm.null), direction="backward")
# start with the null regression (just the intercept term)
lm.null <- lm(mpg ~ 1, data=mtcars)
summary(lm.null)
AIC(lm.null)# the AIC for this model
BIC(lm.null)# Bic for the model
step(lm.null, scope=list(upper=lm(mpg ~ ., data=mtcars)), direction="forward")# use the step regression to automate the process
#k =log(n) to specify use of BIC
# Propagate backwards
lm.full <- lm(mpg ~ ., data=mtcars)
step(lm.full, scope=list(lower=lm.null), direction="backward")
# Bidirectional Propagation
lm.mtcars <- lm(mpg ~ disp + cyl + qsec, data=mtcars)
step(lm.mtcars, scope=list(upper=lm.full,lower=lm.null), direction="both")
head(gapminder)
gapminder %>% group_by(country)
gapminder %>% group_by(country,continent) %>% nest
gapminder %>% group_by(country,continent) %>% nest()
head(gapminder)
y %>% map(tes,data)
y <- gapminder %>% group_by(country,continent) %>% nest()
tes <- function(df){lm(lifeExp~year,data =df)}
head(gapminder)
y %>% map(tes,data)
s <- y %>% mutate (model =map(tes,data))
s <- y %>% mutate (model =map(,data,tes))
head(gapminder)
y <- gapminder %>% group_by(country,continent) %>% nest()
tes <- function(df){lm(lifeExp~year,data =df)}
head(gapminder)
s <- y %>% mutate (model =map(,data,tes))
s <- y %>% mutate (model =map(data,tes))
summary(s)
s <- y %>% mutate (model =map(data,tes),coef = map(model, broom::tidy)
summary(s)
head(gapminder)
y <- gapminder %>% group_by(country,continent) %>% nest()
tes <- function(df){lm(lifeExp~year,data =df)}
head(gapminder)
s <- y %>% mutate (model =map(data,tes),coef = map(model, broom::tidy)
head(gapminder)
y <- gapminder %>% group_by(country,continent) %>% nest()
tes <- function(df){lm(lifeExp~year,data =df)}
head(gapminder)
s <- y %>% mutate (model =map(data,tes),coef = map(model, broom::tidy)
s <- y %>% mutate (model =map(data,tes),coef = map(model, broom::tidy))
summary(s)
head(gapminder)
y <- gapminder %>% group_by(country,continent) %>% nest()
tes <- function(df){lm(lifeExp~year,data =df)}
head(gapminder)
s <- y %>% mutate (model =map(data,tes),coef = map(model, broom::tidy))
summary(s)
s %>% unnest(coeff)
s %>% unnest(coef)
library(MASS)
iris  <- as.tibble(iris)
head(iris)
# VISUALIZE THE DATA
ggplot(iris, aes(Sepal.Length, Sepal.Width, col = Species)) +
geom_point()
# fit the LDA
iris.lda  <- lda(Species ~ Sepal.Length + Sepal.Width, data = iris)
iris.lda
# Grids
sepal.grid  <- expand.grid(Sepal.Length = seq(4,8,length = 100),
Sepal.Width = seq(2,4.5,length = 100))
sepal.grid  <- as.tibble(sepal.grid)
sepal.grid
# predict for each point on the grid
sepal.grid$Species  <- predict(iris.lda,sepal.grid)$class
sepal.grid
# plot the  grid
ggplot(sepal.grid, aes(Sepal.Length, Sepal.Width, fill = Species)) +
geom_tile(alpha = 0.2) +
geom_point(data = iris, aes(col = Species, fill = NA))
mtcars.lm <- lm(mpg ~ disp, data=mtcars)
summary(mtcars.lm)
broom::glance(mtcars.lm) # AIC is 170
# Add more values and test the AIC
mtcars.lm <- lm(mpg ~ disp + wt, data=mtcars)
broom::glance(mtcars.lm)
# The AIC
mtcars.lm <- lm(mpg ~ disp + wt + hp, data=mtcars)
broom::glance(mtcars.lm)
# Even more
mtcars.lm <- lm(mpg ~ disp + wt + hp + cyl, data=mtcars)
broom::glance(mtcars.lm)
# Too many
mtcars.lm <- lm(mpg ~ disp + wt + hp + cyl + gear, data=mtcars)
broom::glance(mtcars.lm)
# start with the null regression (just the intercept term)
lm.null <- lm(mpg ~ 1, data=mtcars)
summary(lm.null)
AIC(lm.null)# the AIC for this model
BIC(lm.null)# Bic for the model
step(lm.null, scope=list(upper=lm(mpg ~ ., data=mtcars)), direction="forward")# use the step regression to automate the process
#k =log(n) to specify use of BIC
# Propagate backwards
lm.full <- lm(mpg ~ ., data=mtcars)
step(lm.full, scope=list(lower=lm.null), direction="backward")
# Bidirectional Propagation
lm.mtcars <- lm(mpg ~ disp + cyl + qsec, data=mtcars)
step(lm.mtcars, scope=list(upper=lm.full,lower=lm.null), direction="both")
library(readxl)
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
knitr::opts_chunk$set(echo = F,warning = F,message =F)
library(readxl)
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
chair %>% dplyr::select(Q_65)
chair %>% dplyr::select(Q_65,Q_66)
chair %>% dplyr::select(Q_65,A_66)
chair %>% dplyr::select(ID,Q_65)
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle	Property_now)
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now)
x2
x <- merge(x1,x2,ID)
library(readxl)
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65)
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now)
x <- merge(x1,x2,ID)
x <- merge(x1,x2,by = ID)
names(x1)
names(x2)
names(x1)<-c("ID","Q_65")
x <- merge(x1,x2,by = 'ID')
x <- merge(x1,x2,by = 'ID',all = T)
View(x)
x$Q_65<-factor(Q_65)
x$Q_65<-factor(x$Q_65)
corr(x)
cor(x)
cor(x$Q_65, x$Property_at_start_of_cycle, method = c("pearson", "kendall", "spearman"))
x %>% ggplot(aes(x =Q_65,y = Property_at_start_of_cycle))+geom_box()
x %>% ggplot(aes(x =Q_65,y = Property_at_start_of_cycle))+geom_boxplot()
x %>% ggplot(aes(x =Q_65,y = Property_at_start_of_cycle))+geom_boxplot()+geom_jitter()
x %>% drop_na() %>% ggplot(aes(x =Q_65,y = Property_at_start_of_cycle))+geom_boxplot()+geom_jitter(alpha =0.1)
x %>% drop_na() %>% ggplot(aes(x =Q_65,y = Property_at_start_of_cycle))+geom_boxplot()+geom_jitter(alpha =0.2)
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes","No"))
library(readxl)
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes","No"))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now)
x <- merge(x1,x2,by = 'ID',all = T)
x$Q_65<-factor(x$Q_65)
x %>% drop_na() %>% ggplot(aes(x =Q_65,y = Property_at_start_of_cycle))+geom_boxplot()+geom_jitter(alpha =0.2)
library(readxl)
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now)
x <- merge(x1,x2,by = 'ID',all = T)
x$Q_65<-factor(x$Q_65)
x %>% drop_na() %>% ggplot(aes(x =Q_65,y = Property_at_start_of_cycle))+geom_boxplot()+geom_jitter(alpha =0.2)
x %>% drop_na() %>% ggplot(aes(x =Q_65,y = Property_now))+geom_boxplot()+geom_jitter(alpha =0.2)
str(x)
library(readxl)
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all = T)
x$Q_65<-factor(x$Q_65)
x %>% drop_na() %>% ggplot(aes(x =Q_65,y = Property_now))+geom_boxplot()+geom_jitter(alpha =0.2)
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = Property_now))+geom_boxplot()+geom_jitter(alpha =0.2)
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot()+geom_jitter(alpha =0.2)
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot()+geom_jitter(alpha =0.2)+facet_grid(variable)
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot()+geom_jitter(alpha =0.2)+facet_grid(~variable)
library(readxl)
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all = T)
x$Q_65<-factor(x$Q_65)
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot()+geom_jitter(alpha =0.2)+facet_grid(~variable)
knitr::opts_chunk$set(echo = F,warning = F,message =F)
colors <- c("#118467", "#A9711E", "#6D847A", "#BB8755", "#82ACA0", "#9C7F61",
"#D88523", "#83A593", "#E6A168", "#9DD0C0", "#BE9D7C", "#A2C8B9",
"#EBCABA", "#A1DBD3")
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(color=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+lab(title = "Joint economic activity vs Property")
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(color=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+labs(title = "Joint economic activity vs Property")
library(readxl)
source(theme.R)
library(readxl)
source("D:\Kamau Lift\SEEP\New Query\theme.R")
library(readxl)
setwd("D:\Kamau Lift\SEEP\New Query\")
source("theme.R")
source('theme.R')
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all = T)
x$Q_65<-factor(x$Q_65)
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(fill=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+labs(title = "Joint economic activity vs Property")
x %>% ggplot(aes(x =Property_now,y =Property_at_start_of_cycle))+geom_scatter()
x %>% ggplot(aes(x =Property_now,y =Property_at_start_of_cycle))+geom_point()
install.packages("fastDummies")
fastDummies::dummy_cols(x)
fastDummies::dummy_cols(x$Q_65)
x %>% drop_na() %>% fastDummies::dummy_cols(Q_65)
x %>% drop_na() %>% fastDummies::dummy_cols(Q_65)
x %>% drop_na() %>% fastDummies::dummy_cols(x$Q_65)
fastDummies::dummy_cols(x$Q_65)
h <- fastDummies::dummy_cols(x$Q_65)[,c(2,3,4,5)]
h
cbind(h,x)
h <- cbind(h,x) %>% dplyr::select(".data_I don’t know",".data_I don’t want to answer",".data_No",".data_Yes")
columns(x2)
names(x2)
h <- cbind(h,x) %>% dplyr::select("Property_at_start_of_cycle","Property_now", ".data_I don’t know",".data_I don’t want to answer",".data_No",".data_Yes")
cor(h)
cor(h,na.rm =T)
h %>% drop_na() %>% cor()
cors <- h %>% drop_na() %>% cor() %>% round(2)
melt(cors)
melt(cors) %>% ggplot( aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
melt(cors) %>% ggplot( aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+theme_classic()
melt(cors) %>% ggplot( aes(x=Var1, y=Var2, fill=value)) +
geom_tile()++
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation")
melt(cors) %>% ggplot( aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation")
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all = T)
x$Q_65<-factor(x$Q_65)
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(fill=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+labs(title = "Joint economic activity vs Property")
head(x)
h <- fastDummies::dummy_cols(x$Q_65)[,c(2,3,4,5)]
h <- cbind(h,x) %>% dplyr::select("Property_at_start_of_cycle","Property_now", ".data_I don’t know",".data_I don’t want to answer",".data_No",".data_Yes")
cors <- h %>% drop_na() %>% cor() %>% round(2)
melt(cors) %>% ggplot( aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation")
anova(x$Property_now,x$Q_65)
anova(x$Property_now,x$Property_at_start_of_cycle)
str(x)
anova(x$Q_65,x$Property_at_start_of_cycle)
anova(x$Property_at_start_of_cycle)
anova(x$Q_65~x$Property_at_start_of_cycle)
lm(x$Property_now~x$Q_65)
summary(model)
model <- lm(x$Property_now~x$Q_65)
summary(model)
anova(model)
summary(model)
head(x)
model <- lm(x$Property_now~x$Q_65)
summary(model)
anova(model)
model <- lm(x$Property_at_start_of_cycle~x$Q_65)
summary(model)
anova(model)
View(x)
x %>% filter(Q_65=="Yes" & Q_65=='No')
levels(Q_65)
levels(x$Q_65)
x %>% filter(Q_65=="Yes" | Q_65=='No')
x %>%melt(id.vars =c(Q_65,ID)) %>%  filter(Q_65=="Yes" | Q_65=='No') %>% group_by(Q_65,variable) %>% summarise(Mean =mean(value),Median =median(value))
x %>%melt(id.vars =c(Q_65,ID))
x %>%melt(id.vars =c("Q_65","ID")) %>%  filter(Q_65=="Yes" | Q_65=='No') %>% group_by(Q_65,variable) %>% summarise(Mean =mean(value),Median =median(value))
x %>%melt(id.vars =c("Q_65","ID")) %>% drop_na() %>%  filter(Q_65=="Yes" | Q_65=='No') %>% group_by(Q_65,variable) %>% summarise(Mean =mean(value),Median =median(value))
x %>%melt(id.vars =c("Q_65","ID")) %>% drop_na() %>%  filter(Q_65=="Yes" | Q_65=='No') %>% group_by(Q_65,variable) %>% summarise(Mean =mean(value),Median =median(value)) %>% dcast(Q_65~variable)
x %>%melt(id.vars =c("Q_65","ID")) %>% drop_na() %>%  filter(Q_65=="Yes" | Q_65=='No') %>% group_by(Q_65,variable) %>% summarise(Mean =mean(value),Median =median(value))
x %>%melt(id.vars =c("Q_65","ID")) %>% drop_na() %>%  filter(Q_65=="Yes" | Q_65=='No') %>% group_by(Q_65,variable) %>% summarise(Mean =mean(value)) %>% dcast(Q_65~variable)
head(x)
x$diff <- x$Property_now-x$Property_at_start_of_cycle
head(x)
aov(x$diff~x$Q_65)
l <- aov(x$diff~x$Q_65)
summary(l)
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(fill=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+labs(title = "Joint economic activity vs Property")
x[x==0]<-NA
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(fill=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+labs(title = "Joint economic activity vs Property")
x[x==0]<-NA
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(fill=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+labs(title = "Joint economic activity vs Property")
melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(fill=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+labs(title = "Joint economic activity vs Property")
T <- melt(x,id.vars =c("ID",'Q_65')) %>% drop_na() %>% ggplot(aes(x =Q_65,y = value))+geom_boxplot(fill=colors[1])+geom_jitter(alpha =0.2)+facet_grid(~variable)+labs(title = "Joint economic activity vs Property")
ggplotly(T)
plotly::ggplotly(T)
knitr::opts_chunk$set(echo = F,warning = F,message =F)
colors <- c("#118467", "#A9711E", "#6D847A", "#BB8755", "#82ACA0", "#9C7F61",
"#D88523", "#83A593", "#E6A168", "#9DD0C0", "#BE9D7C", "#A2C8B9",
"#EBCABA", "#A1DBD3")
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all = T)
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all = T)
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all = T)
x <- merge(x1,x2,by = 'ID',all = True)
x <- merge(x1,x2,by = 'ID',all.x =T,all.y = T)
x <- merge(x1,x2,by = 'ID',all.x =T,all.y = T,all =T)
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all.x =T,all.y = T,all =T)
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all =T)
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all =T)
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all.x = =T)
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all.x=T)
library(readxl)
#source('theme.R')
chair <- read_excel("D:/Kamau Lift/SEEP/New Query/chair.xlsx")
seep <- read_excel("D:/Kamau Lift/SEEP/New Query/seep.xlsx")
x1<- chair %>% dplyr::select(ID,Q_65) %>% mutate(Q_65 = ifelse(Q_65==1,"Yes",ifelse(Q_65==2,"No",ifelse(Q_65==3,"I don’t know","I don’t want to answer"))))
names(x1)<-c("ID","Q_65")
x2 <- seep %>% dplyr::select(ID,Property_at_start_of_cycle,Property_now) %>% mutate(Property_at_start_of_cycle =as.numeric(Property_at_start_of_cycle),Property_now = as.numeric(Property_now))
x <- merge(x1,x2,by = 'ID',all.x=T,all=T)
x <- merge(x1,x2,by = 'ID',all=T)
